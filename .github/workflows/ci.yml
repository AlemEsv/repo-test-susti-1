name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  calidad-codigo-susti:
    runs-on: ubuntu-latest
    name: Calidad de código
    
    steps:
    # Descargar el código del repositorio
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Configurar Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    # Instalar jscpd para detección de código duplicado
    - name: Instalar jscpd
      run: |
        npm install -g jscpd
        
    # Ejecutar detección de código duplicado
    - name: Run duplicate code detection
      run: |
        echo "Verificando código duplicado"
        jscpd --min-lines 20 --min-tokens 100 --reporters console \
        --ignore "**/node_modules/**,**/.git/**,**/dist/**" \
        --formats "bash,python,terraform,yaml" . || echo "Código duplicado encontrado"
      continue-on-error: true

  linters:
    runs-on: ubuntu-latest
    name: Linters
    needs: calidad-codigo-susti
    
    steps:
    # Descargar el código del repositorio
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Configurar Python
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    # Configurar Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest
        
    # Instalar dependencias de Python
    - name: Instalar dependencias Python
      run: |
        pip install pytest flake8 bandit requests fastapi httpx
        pip install -r user-service/requirements.txt
        pip install -r order-service/requirements.txt  
        pip install -r inventory-service/requirements.txt
        
    # Instalar herramientas adicionales
    - name: Instalar herramientas adicionales  
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        sudo apt-get update && sudo apt-get install -y shellcheck
      
    # Linting básico
    - name: Run linting
      run: |
        flake8 . --exclude=__pycache__ --max-line-length=88 || echo "Linting issues found"
        bandit -r . --exclude=__pycache__ || echo "Security issues found"
        find . -name "*.sh" | xargs shellcheck || echo "Shell script issues found"
      continue-on-error: true
        
    # Validar terraform
    - name: Validate terraform
      run: |
        if [ -d "terraform" ]; then
          cd terraform && terraform fmt -check && terraform validate && tflint
        fi
      continue-on-error: true

    # Ejecutar tests
    - name: Run tests
      run: |
        export PYTHONPATH="${PWD}:${PWD}/tests:${PWD}/user-service:${PWD}/order-service:${PWD}/inventory-service"
        python -m pytest tests/ -v || echo "Tests failed"
      continue-on-error: true
